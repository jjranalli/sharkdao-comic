/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISlicerManager,
  ISlicerManagerInterface,
} from "../ISlicerManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint32",
                name: "shares",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "transfersAllowedWhileLocked",
                type: "bool",
              },
            ],
            internalType: "struct Payee[]",
            name: "payees",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "minimumShares",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "currencies",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "releaseTimelock",
            type: "uint256",
          },
          {
            internalType: "uint40",
            name: "transferTimelock",
            type: "uint40",
          },
          {
            internalType: "address",
            name: "controller",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "slicerFlags",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "sliceCoreFlags",
            type: "uint8",
          },
        ],
        internalType: "struct SliceParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "_createSlicer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newLogicImpl",
        type: "address",
      },
    ],
    name: "_upgradeSlicers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ISlicerManager__factory {
  static readonly abi = _abi;
  static createInterface(): ISlicerManagerInterface {
    return new utils.Interface(_abi) as ISlicerManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISlicerManager {
    return new Contract(address, _abi, signerOrProvider) as ISlicerManager;
  }
}
