/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SharkStreetV2, SharkStreetV2Interface } from "../SharkStreetV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slicerId_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "RaffleDone",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_mintRaffle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseTokenURI_",
        type: "string",
      },
    ],
    name: "_setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "slicerCustomData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001f2d38038062001f2d8339810160408190526200003491620004ec565b8383838381600090805190602001906200005092919062000379565b5080516200006690600190602084019062000379565b5050600680546001600160a01b0319166001600160a01b039490941693909317909255608052506200009f620000993390565b620000eb565b60005b600a811015620000e057620000cb73728a4dde804aedaf93ac839c9b0fce031e0361af6200013d565b80620000d78162000580565b915050620000a2565b505050505062000617565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a80549060006200014f8362000580565b91905055506200016881600a546200016b60201b60201c565b50565b6200017782826200026a565b6001600160a01b0382163b1580620002215750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015620001ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002159190620005a8565b6001600160e01b031916145b620002665760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064015b60405180910390fd5b5050565b6001600160a01b038216620002b65760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016200025d565b6000818152600260205260409020546001600160a01b0316156200030e5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016200025d565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546200038790620005db565b90600052602060002090601f016020900481019282620003ab5760008555620003f6565b82601f10620003c657805160ff1916838001178555620003f6565b82800160010185558215620003f6579182015b82811115620003f6578251825591602001919060010190620003d9565b506200040492915062000408565b5090565b5b8082111562000404576000815560010162000409565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200044757600080fd5b81516001600160401b03808211156200046457620004646200041f565b604051601f8301601f19908116603f011681019082821181831017156200048f576200048f6200041f565b81604052838152602092508683858801011115620004ac57600080fd5b600091505b83821015620004d05785820183015181830184015290820190620004b1565b83821115620004e25760008385830101525b9695505050505050565b600080600080608085870312156200050357600080fd5b84516001600160a01b03811681146200051b57600080fd5b6020860151604087015191955093506001600160401b03808211156200054057600080fd5b6200054e8883890162000435565b935060608701519150808211156200056557600080fd5b50620005748782880162000435565b91505092959194509250565b600060018201620005a157634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215620005bb57600080fd5b81516001600160e01b031981168114620005d457600080fd5b9392505050565b600181811c90821680620005f057607f821691505b6020821081036200061157634e487b7160e01b600052602260045260246000fd5b50919050565b6080516118fa620006336000396000610f9201526118fa6000f3fe6080604052600436106101355760003560e01c80637d4aafb4116100ab578063a22cb4651161006f578063a22cb4651461038b578063a23fffb9146103ab578063b88d4fde146103be578063c87b56dd146103de578063e985e9c5146103fe578063f2fde38b1461043957600080fd5b80637d4aafb4146102f857806382b88dc9146103185780638da5cb5b1461033857806395d89b411461035657806395db93681461036b57600080fd5b806323b872dd116100fd57806323b872dd146102245780632a55205a1461024457806342842e0e146102835780636352211e146102a357806370a08231146102c3578063715018a6146102e357600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101df57806318160ddd14610201575b600080fd5b34801561014657600080fd5b5061015a6101553660046112de565b610459565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b506101846104ab565b604051610166919061132b565b34801561019d57600080fd5b506101c76101ac36600461135e565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610166565b3480156101eb57600080fd5b506101ff6101fa36600461138e565b610539565b005b34801561020d57600080fd5b50610216610620565b604051908152602001610166565b34801561023057600080fd5b506101ff61023f3660046113b8565b61063e565b34801561025057600080fd5b5061026461025f3660046113f4565b610805565b604080516001600160a01b039093168352602083019190915201610166565b34801561028f57600080fd5b506101ff61029e3660046113b8565b610833565b3480156102af57600080fd5b506101c76102be36600461135e565b610908565b3480156102cf57600080fd5b506102166102de366004611416565b61095f565b3480156102ef57600080fd5b506101ff6109c2565b34801561030457600080fd5b506101ff6103133660046114bd565b6109f8565b34801561032457600080fd5b506101ff610333366004611416565b610a39565b34801561034457600080fd5b506007546001600160a01b03166101c7565b34801561036257600080fd5b50610184610aa2565b34801561037757600080fd5b5061015a610386366004611526565b610aaf565b34801561039757600080fd5b506101ff6103a63660046115b6565b610b70565b6101ff6103b9366004611526565b610bdc565b3480156103ca57600080fd5b506101ff6103d93660046115f2565b610c37565b3480156103ea57600080fd5b506101846103f936600461135e565b610cfc565b34801561040a57600080fd5b5061015a61041936600461168d565b600560209081526000928352604080842090915290825290205460ff1681565b34801561044557600080fd5b506101ff610454366004611416565b610ddd565b60006301ffc9a760e01b6001600160e01b03198316148061048a57506380ac58cd60e01b6001600160e01b03198316145b806104a55750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546104b8906116c0565b80601f01602080910402602001604051908101604052809291908181526020018280546104e4906116c0565b80156105315780601f1061050657610100808354040283529160200191610531565b820191906000526020600020905b81548152906001019060200180831161051457829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061058257506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105c45760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60095460009060ff166106345750600a5490565b50600a5460010190565b6000818152600260205260409020546001600160a01b038481169116146106945760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016105bb565b6001600160a01b0382166106de5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016105bb565b336001600160a01b038416148061071857506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061073957506000818152600460205260409020546001600160a01b031633145b6107765760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016105bb565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008073ae7f458667f1b30746354abc3157907d9f6fd15e610828600a85611726565b915091509250929050565b61083e83838361063e565b6001600160a01b0382163b15806108e75750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156108b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108db919061173a565b6001600160e01b031916145b6109035760405162461bcd60e51b81526004016105bb90611757565b505050565b6000818152600260205260409020546001600160a01b03168061095a5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016105bb565b919050565b60006001600160a01b0382166109a65760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016105bb565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146109ec5760405162461bcd60e51b81526004016105bb90611781565b6109f66000610e71565b565b6007546001600160a01b03163314610a225760405162461bcd60e51b81526004016105bb90611781565b8051610a3590600890602084019061122f565b5050565b6007546001600160a01b03163314610a635760405162461bcd60e51b81526004016105bb90611781565b60095460ff1615610a875760405163022757c560e11b815260040160405180910390fd5b6009805460ff19166001179055610a9f816000610ec3565b50565b600180546104b8906116c0565b600085600203610b3e576040516370a0823160e01b81526001600160a01b038616600482015273193e6199c2df28820664ddadaf7256ffcff680a2906370a0823190602401602060405180830381865afa158015610b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3591906117b6565b15159050610b42565b5060015b600a54604f1901610b6657604051632cdb04a160e21b815260040160405180910390fd5b9695505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b85610be681610f8f565b610bf4878787878787610aaf565b610c1157604051631eb49d6d60e11b815260040160405180910390fd5b60005b84811015610c2d57610c2586610ffa565b600101610c14565b5050505050505050565b610c4285858561063e565b6001600160a01b0384163b1580610cd95750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610c8a9033908a908990899089906004016117cf565b6020604051808303816000875af1158015610ca9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccd919061173a565b6001600160e01b031916145b610cf55760405162461bcd60e51b81526004016105bb90611757565b5050505050565b6060600060088054610d0d906116c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610d39906116c0565b8015610d865780601f10610d5b57610100808354040283529160200191610d86565b820191906000526020600020905b815481529060010190602001808311610d6957829003601f168201915b505050505090506000815111610dab5760405180602001604052806000815250610dd6565b80610db58461101b565b604051602001610dc6929190611823565b6040516020818303038152906040525b9392505050565b6007546001600160a01b03163314610e075760405162461bcd60e51b81526004016105bb90611781565b6001600160a01b038116610e6c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105bb565b610a9f815b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ecd8282611124565b6001600160a01b0382163b1580610f735750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f67919061173a565b6001600160e01b031916145b610a355760405162461bcd60e51b81526004016105bb90611757565b807f000000000000000000000000000000000000000000000000000000000000000014610fcf57604051632eafdb6960e01b815260040160405180910390fd5b6006546001600160a01b03163314610a9f576040516347322d0360e01b815260040160405180910390fd5b600a805490600061100a83611852565b9190505550610a9f81600a54610ec3565b6060816000036110425750506040805180820190915260018152600360fc1b602082015290565b8160005b811561106c578061105681611852565b91506110659050600a83611726565b9150611046565b60008167ffffffffffffffff81111561108757611087611431565b6040519080825280601f01601f1916602001820160405280156110b1576020820181803683370190505b5090505b841561111c576110c660018361186b565b91506110d3600a86611882565b6110de906030611896565b60f81b8183815181106110f3576110f36118ae565b60200101906001600160f81b031916908160001a905350611115600a86611726565b94506110b5565b949350505050565b6001600160a01b03821661116e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016105bb565b6000818152600260205260409020546001600160a01b0316156111c45760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016105bb565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461123b906116c0565b90600052602060002090601f01602090048101928261125d57600085556112a3565b82601f1061127657805160ff19168380011785556112a3565b828001600101855582156112a3579182015b828111156112a3578251825591602001919060010190611288565b506112af9291506112b3565b5090565b5b808211156112af57600081556001016112b4565b6001600160e01b031981168114610a9f57600080fd5b6000602082840312156112f057600080fd5b8135610dd6816112c8565b60005b838110156113165781810151838201526020016112fe565b83811115611325576000848401525b50505050565b602081526000825180602084015261134a8160408501602087016112fb565b601f01601f19169190910160400192915050565b60006020828403121561137057600080fd5b5035919050565b80356001600160a01b038116811461095a57600080fd5b600080604083850312156113a157600080fd5b6113aa83611377565b946020939093013593505050565b6000806000606084860312156113cd57600080fd5b6113d684611377565b92506113e460208501611377565b9150604084013590509250925092565b6000806040838503121561140757600080fd5b50508035926020909101359150565b60006020828403121561142857600080fd5b610dd682611377565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561146257611462611431565b604051601f8501601f19908116603f0116810190828211818310171561148a5761148a611431565b816040528093508581528686860111156114a357600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156114cf57600080fd5b813567ffffffffffffffff8111156114e657600080fd5b8201601f810184136114f757600080fd5b61111c84823560208401611447565b600082601f83011261151757600080fd5b610dd683833560208501611447565b60008060008060008060c0878903121561153f57600080fd5b863595506020870135945061155660408801611377565b935060608701359250608087013567ffffffffffffffff8082111561157a57600080fd5b6115868a838b01611506565b935060a089013591508082111561159c57600080fd5b506115a989828a01611506565b9150509295509295509295565b600080604083850312156115c957600080fd5b6115d283611377565b9150602083013580151581146115e757600080fd5b809150509250929050565b60008060008060006080868803121561160a57600080fd5b61161386611377565b945061162160208701611377565b935060408601359250606086013567ffffffffffffffff8082111561164557600080fd5b818801915088601f83011261165957600080fd5b81358181111561166857600080fd5b89602082850101111561167a57600080fd5b9699959850939650602001949392505050565b600080604083850312156116a057600080fd5b6116a983611377565b91506116b760208401611377565b90509250929050565b600181811c908216806116d457607f821691505b6020821081036116f457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082611735576117356116fa565b500490565b60006020828403121561174c57600080fd5b8151610dd6816112c8565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156117c857600080fd5b5051919050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600083516118358184602088016112fb565b8351908301906118498183602088016112fb565b01949350505050565b60006001820161186457611864611710565b5060010190565b60008282101561187d5761187d611710565b500390565b600082611891576118916116fa565b500690565b600082198211156118a9576118a9611710565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d3d8a0f5c2ab1b274159567f891c504833e36c92a08aded66098ad0788e1409f64736f6c634300080d0033";

type SharkStreetV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharkStreetV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SharkStreetV2__factory extends ContractFactory {
  constructor(...args: SharkStreetV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SharkStreetV2";
  }

  deploy(
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SharkStreetV2> {
    return super.deploy(
      productsModuleAddress_,
      slicerId_,
      name_,
      symbol_,
      overrides || {}
    ) as Promise<SharkStreetV2>;
  }
  getDeployTransaction(
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      productsModuleAddress_,
      slicerId_,
      name_,
      symbol_,
      overrides || {}
    );
  }
  attach(address: string): SharkStreetV2 {
    return super.attach(address) as SharkStreetV2;
  }
  connect(signer: Signer): SharkStreetV2__factory {
    return super.connect(signer) as SharkStreetV2__factory;
  }
  static readonly contractName: "SharkStreetV2";
  public readonly contractName: "SharkStreetV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharkStreetV2Interface {
    return new utils.Interface(_abi) as SharkStreetV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SharkStreetV2 {
    return new Contract(address, _abi, signerOrProvider) as SharkStreetV2;
  }
}
