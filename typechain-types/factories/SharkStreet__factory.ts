/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SharkStreet, SharkStreetInterface } from "../SharkStreet";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slicerId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "_setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "slicerCustomData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001a1e38038062001a1e83398101604081905262000034916200026e565b81818585816000908051906020019062000050929190620000fb565b50805162000066906001906020840190620000fb565b5050600680546001600160a01b0319166001600160a01b039490941693909317909255608052506200009f620000993390565b620000a9565b505050506200033d565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001099062000301565b90600052602060002090601f0160209004810192826200012d576000855562000178565b82601f106200014857805160ff191683800117855562000178565b8280016001018555821562000178579182015b82811115620001785782518255916020019190600101906200015b565b50620001869291506200018a565b5090565b5b808211156200018657600081556001016200018b565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c957600080fd5b81516001600160401b0380821115620001e657620001e6620001a1565b604051601f8301601f19908116603f01168101908282118183101715620002115762000211620001a1565b816040528381526020925086838588010111156200022e57600080fd5b600091505b8382101562000252578582018301518183018401529082019062000233565b83821115620002645760008385830101525b9695505050505050565b600080600080608085870312156200028557600080fd5b84516001600160401b03808211156200029d57600080fd5b620002ab88838901620001b7565b95506020870151915080821115620002c257600080fd5b50620002d187828801620001b7565b604087015190945090506001600160a01b0381168114620002f157600080fd5b6060959095015193969295505050565b600181811c908216806200031657607f821691505b6020821081036200033757634e487b7160e01b600052602260045260246000fd5b50919050565b6080516116c5620003596000396000610e3601526116c56000f3fe60806040526004361061012a5760003560e01c8063715018a6116100ab578063a22cb4651161006f578063a22cb4651461035c578063a23fffb91461037c578063b88d4fde1461038f578063c87b56dd146103af578063e985e9c5146103cf578063f2fde38b1461040a57600080fd5b8063715018a6146102d457806387f350b8146102e95780638da5cb5b1461030957806395d89b411461032757806395db93681461033c57600080fd5b806323b872dd116100f257806323b872dd146102155780632a55205a1461023557806342842e0e146102745780636352211e1461029457806370a08231146102b457600080fd5b806301ffc9a71461012f57806306fdde0314610164578063081812fc14610186578063095ea7b3146101d457806318160ddd146101f6575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611140565b61042a565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b5061017961047c565b60405161015b9190611164565b34801561019257600080fd5b506101bc6101a13660046111b9565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b3480156101e057600080fd5b506101f46101ef3660046111e9565b61050a565b005b34801561020257600080fd5b506009545b60405190815260200161015b565b34801561022157600080fd5b506101f4610230366004611213565b6105f1565b34801561024157600080fd5b5061025561025036600461124f565b6107b8565b604080516001600160a01b03909316835260208301919091520161015b565b34801561028057600080fd5b506101f461028f366004611213565b6107e6565b3480156102a057600080fd5b506101bc6102af3660046111b9565b6108bb565b3480156102c057600080fd5b506102076102cf366004611271565b610912565b3480156102e057600080fd5b506101f4610975565b3480156102f557600080fd5b506101f4610304366004611318565b6109ab565b34801561031557600080fd5b506007546001600160a01b03166101bc565b34801561033357600080fd5b506101796109ec565b34801561034857600080fd5b5061014f610357366004611389565b6109f9565b34801561036857600080fd5b506101f4610377366004611419565b610b3a565b6101f461038a366004611389565b610ba6565b34801561039b57600080fd5b506101f46103aa366004611455565b610bed565b3480156103bb57600080fd5b506101796103ca3660046111b9565b610cb2565b3480156103db57600080fd5b5061014f6103ea3660046114f0565b600560209081526000928352604080842090915290825290205460ff1681565b34801561041657600080fd5b506101f4610425366004611271565b610d46565b60006301ffc9a760e01b6001600160e01b03198316148061045b57506380ac58cd60e01b6001600160e01b03198316145b806104765750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461048990611523565b80601f01602080910402602001604051908101604052809291908181526020018280546104b590611523565b80156105025780601f106104d757610100808354040283529160200191610502565b820191906000526020600020905b8154815290600101906020018083116104e557829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061055357506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105955760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b038481169116146106475760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161058c565b6001600160a01b0382166106915760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161058c565b336001600160a01b03841614806106cb57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806106ec57506000818152600460205260409020546001600160a01b031633145b6107295760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161058c565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008073ae7f458667f1b30746354abc3157907d9f6fd15e6107db600a8561155d565b915091509250929050565b6107f18383836105f1565b6001600160a01b0382163b158061089a5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af115801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e919061157f565b6001600160e01b031916145b6108b65760405162461bcd60e51b815260040161058c9061159c565b505050565b6000818152600260205260409020546001600160a01b03168061090d5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161058c565b919050565b60006001600160a01b0382166109595760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015260640161058c565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b0316331461099f5760405162461bcd60e51b815260040161058c906115c6565b6109a96000610de1565b565b6007546001600160a01b031633146109d55760405162461bcd60e51b815260040161058c906115c6565b80516109e8906008906020840190611091565b5050565b6001805461048990611523565b60095460009060631901610a2057604051632cdb04a160e21b815260040160405180910390fd5b6040516370a0823160e01b81526001600160a01b038616600482015269021e19e0c9bab24000009073232afce9f1b3aae7cb408e482e847250843db931906370a0823190602401602060405180830381865afa158015610a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa891906115fb565b101580610b2f57506040516370a0823160e01b81526001600160a01b038616600482015273494715b2a3c75dadd24929835b658a1c19bd4552906370a0823190602401602060405180830381865afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c91906115fb565b15155b979650505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b85610bb081610e33565b610bbe8787878787876109f9565b610bdb57604051631eb49d6d60e11b815260040160405180910390fd5b610be485610e9e565b50505050505050565b610bf88585856105f1565b6001600160a01b0384163b1580610c8f5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610c409033908a90899089908990600401611614565b6020604051808303816000875af1158015610c5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c83919061157f565b6001600160e01b031916145b610cab5760405162461bcd60e51b815260040161058c9061159c565b5050505050565b606060088054610cc190611523565b80601f0160208091040260200160405190810160405280929190818152602001828054610ced90611523565b8015610d3a5780601f10610d0f57610100808354040283529160200191610d3a565b820191906000526020600020905b815481529060010190602001808311610d1d57829003601f168201915b50505050509050919050565b6007546001600160a01b03163314610d705760405162461bcd60e51b815260040161058c906115c6565b6001600160a01b038116610dd55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161058c565b610dde81610de1565b50565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b807f000000000000000000000000000000000000000000000000000000000000000014610e7357604051632eafdb6960e01b815260040160405180910390fd5b6006546001600160a01b03163314610dde576040516347322d0360e01b815260040160405180910390fd5b60098054906000610eae83611668565b9190505550610dde81600954610ec48282610f86565b6001600160a01b0382163b1580610f6a5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015610f3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5e919061157f565b6001600160e01b031916145b6109e85760405162461bcd60e51b815260040161058c9061159c565b6001600160a01b038216610fd05760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161058c565b6000818152600260205260409020546001600160a01b0316156110265760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161058c565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461109d90611523565b90600052602060002090601f0160209004810192826110bf5760008555611105565b82601f106110d857805160ff1916838001178555611105565b82800160010185558215611105579182015b828111156111055782518255916020019190600101906110ea565b50611111929150611115565b5090565b5b808211156111115760008155600101611116565b6001600160e01b031981168114610dde57600080fd5b60006020828403121561115257600080fd5b813561115d8161112a565b9392505050565b600060208083528351808285015260005b8181101561119157858101830151858201604001528201611175565b818111156111a3576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156111cb57600080fd5b5035919050565b80356001600160a01b038116811461090d57600080fd5b600080604083850312156111fc57600080fd5b611205836111d2565b946020939093013593505050565b60008060006060848603121561122857600080fd5b611231846111d2565b925061123f602085016111d2565b9150604084013590509250925092565b6000806040838503121561126257600080fd5b50508035926020909101359150565b60006020828403121561128357600080fd5b61115d826111d2565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156112bd576112bd61128c565b604051601f8501601f19908116603f011681019082821181831017156112e5576112e561128c565b816040528093508581528686860111156112fe57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561132a57600080fd5b813567ffffffffffffffff81111561134157600080fd5b8201601f8101841361135257600080fd5b611361848235602084016112a2565b949350505050565b600082601f83011261137a57600080fd5b61115d838335602085016112a2565b60008060008060008060c087890312156113a257600080fd5b86359550602087013594506113b9604088016111d2565b935060608701359250608087013567ffffffffffffffff808211156113dd57600080fd5b6113e98a838b01611369565b935060a08901359150808211156113ff57600080fd5b5061140c89828a01611369565b9150509295509295509295565b6000806040838503121561142c57600080fd5b611435836111d2565b91506020830135801515811461144a57600080fd5b809150509250929050565b60008060008060006080868803121561146d57600080fd5b611476866111d2565b9450611484602087016111d2565b935060408601359250606086013567ffffffffffffffff808211156114a857600080fd5b818801915088601f8301126114bc57600080fd5b8135818111156114cb57600080fd5b8960208285010111156114dd57600080fd5b9699959850939650602001949392505050565b6000806040838503121561150357600080fd5b61150c836111d2565b915061151a602084016111d2565b90509250929050565b600181811c9082168061153757607f821691505b60208210810361155757634e487b7160e01b600052602260045260246000fd5b50919050565b60008261157a57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561159157600080fd5b815161115d8161112a565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561160d57600080fd5b5051919050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60006001820161168857634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122018192757e3c12867fed6f6b4cc10286ac121951d892320c9f98123f66c1d672764736f6c634300080d0033";

type SharkStreetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharkStreetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SharkStreet__factory extends ContractFactory {
  constructor(...args: SharkStreetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SharkStreet";
  }

  deploy(
    name_: string,
    symbol_: string,
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SharkStreet> {
    return super.deploy(
      name_,
      symbol_,
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    ) as Promise<SharkStreet>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    );
  }
  attach(address: string): SharkStreet {
    return super.attach(address) as SharkStreet;
  }
  connect(signer: Signer): SharkStreet__factory {
    return super.connect(signer) as SharkStreet__factory;
  }
  static readonly contractName: "SharkStreet";
  public readonly contractName: "SharkStreet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharkStreetInterface {
    return new utils.Interface(_abi) as SharkStreetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SharkStreet {
    return new Contract(address, _abi, signerOrProvider) as SharkStreet;
  }
}
